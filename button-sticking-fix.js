// –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–ª–∏–ø–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫
// –î–æ–±–∞–≤–∏—Ç—å —ç—Ç–æ—Ç –∫–æ–¥ –≤ –∫–æ–Ω–µ—Ü app.js

function resetUIStates() {
    // –°–±—Ä–æ—Å disabled —Å–æ—Å—Ç–æ—è–Ω–∏–π
    document.querySelectorAll('button:disabled').forEach(btn => {
        if (!btn.classList.contains('permanently-disabled')) {
            btn.disabled = false;
        }
    });
    
    // –°–±—Ä–æ—Å loading —Å–æ—Å—Ç–æ—è–Ω–∏–π
    document.querySelectorAll('.loading').forEach(el => {
        el.classList.remove('loading');
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –≤—Å–µ—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    document.querySelectorAll('.modal.show').forEach(modal => {
        modal.classList.remove('show');
        modal.style.display = 'none';
    });
    
    // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∫—Ä–æ–ª–ª–∞
    document.body.style.overflow = '';
    
    console.log('üîÑ –°–æ—Å—Ç–æ—è–Ω–∏—è UI —Å–±—Ä–æ—à–µ–Ω—ã');
}

function forceCloseAllModals() {
    document.querySelectorAll('.modal.show').forEach(modal => {
        modal.classList.remove('show');
        modal.style.display = 'none';
    });
    document.body.style.overflow = '';
}

function checkButtonStates() {
    const buttons = document.querySelectorAll('button');
    buttons.forEach(btn => {
        if (btn.disabled && !btn.classList.contains('loading') && !btn.classList.contains('permanently-disabled')) {
            console.warn('–ö–Ω–æ–ø–∫–∞ –∑–∞—Å—Ç—Ä—è–ª–∞ –≤ disabled —Å–æ—Å—Ç–æ—è–Ω–∏–∏:', btn);
            btn.disabled = false;
        }
    });
}

// –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å
window.resetUIStates = resetUIStates;
window.forceCloseAllModals = forceCloseAllModals;
window.checkButtonStates = checkButtonStates;

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
setInterval(checkButtonStates, 5000);

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ Escape
document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
        forceCloseAllModals();
    }
});

// –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
function addEmergencyResetButton() {
    const settingsMenu = document.getElementById('settingsMenu');
    if (settingsMenu) {
        const resetBtn = document.createElement('div');
        resetBtn.className = 'settings-item danger';
        resetBtn.innerHTML = 'üîÑ –°–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏—è UI';
        resetBtn.onclick = resetUIStates;
        settingsMenu.appendChild(resetBtn);
    }
}

// –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
document.addEventListener('DOMContentLoaded', () => {
    setTimeout(addEmergencyResetButton, 1000);
});

console.log('‚úÖ –§—É–Ω–∫—Ü–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–ª–∏–ø–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');

